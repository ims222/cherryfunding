<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cherryfunding.spring.vo.CharityMapper">
	<sql id="isConfirm">
		and confirm = 'y'
	</sql>
	<sql id="category">
		<if test="category != null and category != '' and category != '전체보기'">
			and category = #{category}
		</if>
	</sql>
	<sql id="search">
		<if test="field!=null and field!=''">
			or ${field} like '%' || #{keyword} || '%'
		</if>
	</sql>
	
	<sql id="searchcharity">
		<if test="keyword!='null' and keyword!=''">
			and ${field} like #{keyword} || '%'
		</if>
	</sql>
	
	<sql id="sort">
		<choose>
			<when test="sort == 'popular'">
				order by hit desc, cNum desc
			</when>
			<when test="sort == 'cAmount'">
				order by cAmount desc, cNum desc
			</when>
			<otherwise>
				order by cNum desc
			</otherwise>
		</choose>
	</sql>
	
	<select id="list" resultType="charity">
		select * from charity order by cNum
	</select>
	
	<select id="select" parameterType="int" resultType="charity">
		select * from charity where cNum = #{num}
	</select>
	<insert id="insert" parameterType="charity">
		insert into charity values(#{cNum},#{id},#{title},#{content},#{amount},
		0,#{sDate},#{eDate},#{category},
		#{confirm},#{aId},#{addr},sysdate,0,#{cPrice})
	</insert>
	<update id="update" parameterType="charity">
		update charity set title=#{title},content=#{content},amount=#{amount},cAmount=#{cAmount},
		sdate=#{sdate},edate=#{edate},category=#{category},confirm=#{confirm},aId=#{aId},
		addr=#{addr},id=#{id} where cNum = #{cNum} 
	</update>
	<delete id="delete" parameterType="int">
		delete from charity where cNum=#{num}
	</delete>
	<select id="getMaxNum" resultType="int">
		select nvl(max(cNum), 0) from charity
	</select>
	<update id="hitUp" parameterType="int">
		update charity set hit = hit + 1 where cNum = #{cNum}
	</update>
	
	<select id="searchwaitList" parameterType="hashmap" resultType="charity">
		select * from charity where confirm = 'n'
		<include refid="searchcharity"/>
	</select>
	
	<select id="waitList" resultType="charity">
		select * from charity where confirm = 'n'
	</select>
	
	<update id="wait" parameterType="int">
		update charity set confirm ='n' where cNum = #{cNum}
	</update>
	
	<update id="confirm" parameterType="int">
		update charity set confirm = 'y' where cNum = #{cNum}
	</update>
	
	<select id="confirmList" resultType="charity">
		select * from charity where confirm = 'y'
	</select>
	
	<select id="searchconfirmList" parameterType="hashmap" resultType="charity">
		select * from charity where confirm = 'y'
		<include refid="searchcharity"/>
	</select>
	
	
	<!-- 준비중 펀딩 -->
	<select id="prepare" parameterType= "hashmap" resultType="charity">
		select * from charity
		<![CDATA[where sdate > sysdate and edate > sysdate]]>
		<include refid="category"/>
		<include refid="search"/>
		order by cNum desc
	</select>
	
	<!-- 종료된 펀딩 -->
	<select id="end" parameterType= "hashmap"  resultType="charity">
		select * from charity
		<![CDATA[where sdate < sysdate and edate < sysdate]]>
		<include refid="category"/>
		<include refid="search"/>
		order by cNum desc
	</select>
	<!-- 진행중 펀딩 -->
	<select id="ing" parameterType="hashmap" resultType="charity">
		<choose>
			<when test="sort == 'end'">
				select * from (
    				select * from charity
    				<![CDATA[where sdate < sysdate and edate > sysdate]]>
					)aa,(
					select (edate-sysdate)cal, cNum from charity
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
					)bb
				where aa.cNum = bb.cNum
				<include refid="category" />
				<include refid="search" />
				order by cal asc
			</when>
			<when test="sort == 'recommend'">
				select bb.* from (
					select * from (
    					select aa.* from (
     						select count(c.cNum) cnt, c.cNum cn from (
       							select * from charity
       							<![CDATA[where sdate < sysdate and edate > sysdate]]>
      						) c, crecommend cr where c.cNum = cr.cNum group by c.cNum
    					)aa
    				order by cnt desc, cn desc)
			)aa, (select * from charity )bb
			where aa.cn = bb.cNum(+) order by cnt
			</when>
			<otherwise>
				select * from charity
				<![CDATA[where sdate < sysdate and edate > sysdate]]>
				<include refid="isConfirm"/>
				<include refid="category" />
				<include refid="search" />
				<include refid="sort" />
			</otherwise>
		</choose>
	</select>
	
	<!-- 메인 요약 -->
		<!-- 종료임바크 -->
		<select id="mainEnd" resultType="charity">
			select * from (
				select aa.*, rownum rnum from(
					select * from charity
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
					and (edate-sysdate) = (select min(edate-sysdate) from charity
						<![CDATA[where sdate < sysdate and edate > sysdate]]>) order by cNum desc
										)aa
			) where rnum = 1
		</select>
		
		<!-- 새로 시작하는 -->
		<select id="mainNew" resultType="charity">
			select * from (
				select aa.*, rownum rnum from (
					select * from charity
					<![CDATA[where sdate > sysdate and edate > sysdate]]>
					and (sysdate - sdate) = (select max(sysdate - sdate) cNum from charity
								<![CDATA[where sdate > sysdate and edate > sysdate]]>) order by cNum desc
											)aa
			) where rnum =1
		</select>
		
		<!-- 핫 -->
		<select id="mainHot" resultType="charity">
			select * from (
				select aa.*, rownum rnum from (
					select * from charity
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
        			order by cNum desc
   				 )aa
			where hit = (select max(hit) from charity
				<![CDATA[where sdate < sysdate and edate > sysdate]]>)
			) where rnum = 1
		</select>
		
		<!-- 액수 -->
		<select id="mainPrice" resultType="charity">
			select * from (
				select aa.*, rownum rnum from (
					select * from charity
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
        			order by cNum desc
   				 )aa
			where cAmount = (select max(cAmount) from charity
				<![CDATA[where sdate < sysdate and edate > sysdate]]>)
			) where rnum = 1
		</select>
			<!-- 전체 펀딩 금액, 갯수-->
	<select id="totCharity" resultType="hashmap">
		select NVL(count(cNum), 0) cnt, NVL(sum(cAmount), 0) s from charity
	</select>
	<!-- 오늘 펀딩 금액, 갯수 -->
	<select id="todayCharity" resultType="hashmap">
		select NVL(count(charity.cNum), 0) cnt, NVL(sum(charity.cAmount), 0) s from (
			select * from charity
			<![CDATA[where sdate < sysdate and edate > sysdate]]>) charity,
			(select * from cdetail where regdate = sysdate) cdetail
			where charity.cNum = cdetail.cNum
	</select>
</mapper>