<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cherryfunding.spring.vo.FundingMapper">
	<sql id="isConfirm">
		and confirm = 'y'
	</sql>
	<sql id="category">
		<if
			test="category != null and category != '' and category != '전체보기'">
			and category = #{category}
		</if>
	</sql>
	<sql id="search">
		<if test="field!=null and field!=''">
			and ${field} like '%' || #{keyword} || '%'
		</if>
	</sql>
	
	<sql id="searchwaite">
		
		<choose>
			<when test="keyword!=null and keyword!=''">
				<choose>
					<when test="field == 'id'">
						and aid like #{keyword} || '%'
					</when>
					<otherwise>
						and title like #{keyword} || '%'
					</otherwise>
				</choose>
			</when>
		</choose>
	
	</sql>
	
	
	<sql id="sort">
		<choose>
			<when test="sort == 'popular'">
				order by hit desc, fNum desc
			</when>
			<when test="sort == 'camount'">
				order by camout desc, fNum desc
			</when>
			<otherwise>
				order by fNum desc
			</otherwise>
		</choose>
	</sql>

	<select id="list" resultType="funding">
		select * from funding order by fNum
	</select>

	<select id="select" parameterType="int" resultType="funding">
		select * from
		funding where fNum = #{num}
	</select>
	
	<insert id="insert" parameterType="funding">
		insert into funding
		values(#{fNum},#{title},#{content},#{amount},
		0,#{sdate},#{edate},#{category},
		#{confirm},#{aid},#{addr},sysdate,#{id},0)
	</insert>
	
	<update id="update" parameterType="funding">
		update funding set
		title=#{title},content=#{content},amount=#{amount},camout=#{camout},
		sdate=#{sdate},edate=#{edate},category=#{category},confirm=#{confirm},aid=#{aid},
		addr=#{addr},id=#{id} where fNum = #{fNum}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from funding where
		fNum=#{num}
	</delete>
	<select id="getMaxNum" resultType="int">
		select nvl(max(fNum), 0) from
		funding
	</select>

	<update id="hitUp" parameterType="int">
		update funding set hit = hit + 1 where fNum = #{fNum}
	</update>
	
	<select id="waitList" resultType="funding">
		select * from funding where confirm = 'n'
	</select>
	
	<select id="searchwaitList" parameterType="hashmap" resultType="funding">
		select * from funding where confirm = 'n'
		<include refid="searchwaite"/>
	</select>
	
	<select id="confirmList" resultType="funding">
		select * from funding where confirm = 'y'
	</select>
	
	<select id="searchconfirmList" parameterType="hashmap" resultType="funding">
		select * from funding where confirm = 'y'
		<include refid="searchwaite"/>
	</select>
	
	
		
	<update id="confirm" parameterType="int">
		update funding set confirm = 'y' where fNum = #{fNum}
	</update>
	

	<update id="wait" parameterType="int">
		update funding set confirm ='n' where fNum = #{fNum}
	</update>

	<update id="addCamout" parameterType="hashmap">
		update funding set camout = camout + #{price} where fNum = #{fNum}

	</update>


	<!-- 준비중 펀딩 -->
	<select id="prepare" parameterType="hashmap"
		resultType="funding">
		select * from funding
		<![CDATA[where sdate > sysdate and edate > sysdate]]>
		<include refid="category" />
		<include refid="search" />
		<include refid="isConfirm"/>
		order by fNum desc
	</select>

	<!-- 종료된 펀딩 -->
	<select id="end" parameterType="hashmap" resultType="funding">
		select * from funding
		<![CDATA[where sdate < sysdate and edate < sysdate]]>
		<include refid="category" />
		<include refid="search" />
		<include refid="isConfirm"/>
		order by fNum desc
	</select>
	
	<!-- 진행중 펀딩 -->
	<select id="ing" parameterType="hashmap" resultType="funding">
		<choose>
			<when test="sort == 'end'">
				select * from (
    				select * from funding
    				<![CDATA[where sdate < sysdate and edate > sysdate]]>
					)aa,(
					select (edate-sysdate)cal, fNum from funding
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
					)bb
				where aa.fNum = bb.fNum
				<include refid="category" />
				<include refid="search" />
				<include refid="isConfirm"/>
				order by cal asc
			</when>
			<when test="sort == 'recommend'">
				select bb.* from (
					select * from (
    					select aa.* from (
     						select count(f.fNum) cnt, f.fNum fn from (
       							select * from funding
       							<![CDATA[where sdate < sysdate and edate > sysdate]]>
      						) f, frecommend fr where f.fNum = fr.fNum group by f.fNum
    					)aa
    				order by cnt desc, fn desc)
			)aa, (select * from funding )bb
			where aa.fn = bb.fNum(+)
			<include refid="isConfirm"/>
			 order by cnt
			</when>
			<otherwise>
				select * from funding
				<![CDATA[where sdate < sysdate and edate > sysdate]]>
				<include refid="isConfirm"/>
				<include refid="category" />
				<include refid="search" />
				<include refid="sort" />
			</otherwise>
		</choose>
	</select>
	
	<!-- 메인 요약 -->
		<!-- 종료임바크 -->
		<select id="mainEnd" resultType="funding">
			select * from (
				select aa.*, rownum rnum from(
					select * from funding
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
					and (edate-sysdate) = (select min(edate-sysdate) from funding
						<![CDATA[where sdate < sysdate and edate > sysdate]]>) order by fNum desc
										)aa
			) where rnum = 1 
			<include refid="isConfirm"/>
		</select>
		
		<!-- 새로 시작하는 -->
		<select id="mainNew" resultType="funding">
			select * from (
				select aa.*, rownum rnum from (
					select * from funding
					where sdate > sysdate and edate > sysdate 
					and (sysdate - sdate) = (select max(sysdate - sdate) fNum from funding
						where sdate > sysdate and edate > sysdate and confirm = 'y'
                        ) order by fNum desc
											)aa
			) where rnum = 1
		</select>
		
		<!-- 핫 -->
		<select id="mainHot" resultType="funding">
			select * from (
				select aa.*, rownum rnum from (
					select * from funding
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
        			order by fNum desc
   				 )aa
			where hit = (select max(hit) from funding
				<![CDATA[where sdate < sysdate and edate > sysdate]]>)
			) where rnum = 1
			<include refid="isConfirm"/>
		</select>
		
		<!-- 액수 -->
		<select id="mainPrice" resultType="funding">
			select * from (
				select aa.*, rownum rnum from (
					select * from funding
					<![CDATA[where sdate < sysdate and edate > sysdate]]>
        			order by fNum desc
   				 )aa
			where camout = (select max(camout) from funding
				<![CDATA[where sdate < sysdate and edate > sysdate]]>)
			) where rnum = 1
			<include refid="isConfirm"/>
		</select>
	
	<!-- ///////// -->
	
	<!-- 전체 펀딩 금액, 갯수-->
	<select id="totFunding" resultType="hashmap">
		select NVL(count(fNum), 0) cnt, NVL(sum(camout), 0) s from funding
	</select>
	<!-- 오늘 펀딩 금액, 갯수 -->
	<select id="todayFunding" resultType="hashmap">
		select NVL(count(funding.fNum), 0) cnt, NVL(sum(funding.camout), 0) s from (
			select * from funding
			<![CDATA[where sdate < sysdate and edate > sysdate]]>) funding,
			(select * from fdetail where regdate = sysdate) fdetail
			where funding.fNum = fdetail.fNum
	</select>
	
</mapper>