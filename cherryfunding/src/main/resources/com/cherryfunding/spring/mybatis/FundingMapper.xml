<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cherryfunding.spring.vo.FundingMapper">
	<sql id="ing">
		<![CDATA[where sdate < (sysdate + (1/24)*9) and edate > (sysdate + (1/24)*9)]]>
	</sql>
	<sql id="prepare">
		<![CDATA[where sdate > (sysdate + (1/24)*9) and edate > (sysdate + (1/24)*9)]]>
	</sql>
	<sql id="end">
		<![CDATA[where sdate < (sysdate + (1/24)*9) and edate < (sysdate + (1/24)*9)]]>
	</sql>
	<sql id="isConfirm">
		and confirm = 'y'
	</sql>
	<sql id="category">
		<if
			test="category != null and category != '' and category != '전체보기'">
			and category = #{category}
		</if>
	</sql>
	<sql id="search">
		<if test="field!=null and field!=''">
			and ${field} like '%' || #{keyword} || '%'
		</if>
	</sql>
	
	<sql id="searchwaite">
		
		<choose>
			<when test="keyword!=null and keyword!=''">
				<choose>
					<when test="field == 'id'">
						and aid like #{keyword} || '%'
					</when>
					<otherwise>
						and title like #{keyword} || '%'
					</otherwise>
				</choose>
			</when>
		</choose>
	
	</sql>
	
	
	<sql id="sort">
		<choose>
			<when test="sort == 'popular'">
				order by hit desc, fNum desc
			</when>
			<when test="sort == 'camount'">
				order by camout desc, fNum desc
			</when>
			<otherwise>
				order by fNum desc
			</otherwise>
		</choose>
	</sql>

	<select id="list" resultType="funding">
		select * from funding order by fNum desc
	</select>

	<select id="select" parameterType="int" resultType="funding">
		select * from funding where fNum = #{num}
	</select>
	
	<select id="detail" parameterType="int" resultType="funding">
		select * from funding where fNum = #{fNum}
	</select>
	
	<insert id="insert" parameterType="funding">
		insert into funding
		values(#{fNum}, #{title}, #{content}, #{amount},
		0, #{sdate}, #{edate}, #{category},
		'n', null, null, (sysdate + (1/24)*9), #{id},0)
	</insert>
	
	<update id="update" parameterType="funding">
		update funding
		<set>
			<if test="title != null">title = #{title},</if>
			<if test="content != null">content = #{content},</if>
			<if test="amount != null">amount = #{amount},</if>
			<if test="camout != null">camout = #{camout},</if>
			<if test="sdate != null">sdate = #{sdate},</if>
			<if test="edate != null">edate = #{edate},</if>
			<if test="category != null">category = #{category},</if>
			<if test="confirm != null">confirm = #{confirm},</if>
			<if test="aid != null">aid = #{aid},</if>
			<if test="addr != null">addr = #{addr},</if>
			<if test="aid != null">aid = #{aid},</if>
		</set>
		where fNum = #{fNum}
	</update>
	
	
	<delete id="delete" parameterType="int">
		delete from funding where
		fNum=#{num}
	</delete>
	<select id="getMaxNum" resultType="int">
		select nvl(max(fNum), 0) from
		funding
	</select>

	<update id="hitUp" parameterType="int">
		update funding set hit = hit + 1 where fNum = #{fNum}
	</update>
	
	<select id="waitList" resultType="funding">
		select * from funding where confirm = 'n'
	</select>
	
	<select id="searchwaitList" parameterType="hashmap" resultType="funding">
		select * from funding where confirm = 'n'
		<include refid="searchwaite"/>
	</select>
	
	<select id="confirmList" resultType="funding">
		select * from funding where confirm = 'y'
	</select>
	
	<select id="searchconfirmList" parameterType="hashmap" resultType="funding">
		select * from funding where confirm = 'y'
		<include refid="searchwaite"/>
	</select>
	
	
		
	<update id="confirm" parameterType="int">
		update funding set confirm = 'y' where fNum = #{fNum}
	</update>
	

	<update id="wait" parameterType="int">
		update funding set confirm ='n' where fNum = #{fNum}
	</update>

	<update id="addCamout" parameterType="hashmap">
		update funding set camout = camout + #{price} where fNum = #{fNum}
	</update>
	
	<select id="getTotCount" resultType="int">
		select NVL(count(fNum), 0) from funding
	</select>
	
	<select id="hashtag" parameterType="string" resultType="funding">
		select * from (
			select * from funding
			<include refid="ing"/>
			<include refid="isConfirm"/>
		) where title like '%' || #{hashtag} || '%'
			or content like '%' || #{hashtag} || '%'
			or category like '%' || #{hashtag} || '%'
		order by fNum desc
	</select>


	<!-- 준비중 펀딩 -->
	<select id="prepare" parameterType="hashmap"
		resultType="funding">
		select * from funding
		<include refid="prepare"/>
		<include refid="category" />
		<include refid="search" />
		<include refid="isConfirm"/>
		order by fNum desc
	</select>

	<!-- 종료된 펀딩 -->
	<select id="end" parameterType="hashmap" resultType="funding">
		select * from funding
		<include refid="end"/>
		<include refid="category" />
		<include refid="search" />
		<include refid="isConfirm"/>
		order by fNum desc
	</select>
	
	<!-- 진행중 펀딩 -->
	<select id="ing" parameterType="hashmap" resultType="hashmap">
		<choose>
			<when test="sort == 'end'">
				select * from (
    				select * from funding
    				<include refid="ing"/>
					)aa,(
					select (edate-(sysdate + (1/24)*9))cal, fNum from funding
					<include refid="ing"/>
					)bb
				where aa.fNum = bb.fNum
				<include refid="category" />
				<include refid="search" />
				<include refid="isConfirm"/>
				order by cal asc
			</when>
			<when test="sort == 'recommend'">
				select bb.* from (
					select * from (
    					select aa.* from (
     						select count(f.fNum) cnt, f.fNum fn from (
       							select * from funding
       							<include refid="ing"/>
      						) f, frecommend fr where f.fNum = fr.fNum group by f.fNum
    					)aa
    				order by cnt desc, fn desc)
			)aa, (select * from funding )bb
			where aa.fn = bb.fNum(+)
			<include refid="isConfirm"/>
			order by cnt
			</when>
			<otherwise>
				select * from (
					select aa.FNUM fnum, aa.TITLE title, aa.CONTENT content,
					aa.AMOUNT amount, aa.CAMOUT camout, to_char(aa.SDATE, 'yy-mm-dd') sdate,
					to_char(aa.EDATE, 'yy-mm-dd') edate, (ceil(edate - (sysdate + (1/24)*9)) * -1) dday, aa.CATEGORY category, aa.CONFIRM confirm,
					aa.AID aid, aa.ADDR addr, aa.REGDATE regdate, aa.ID id, aa.HIT hit, rownum rnum from (
						select * from funding
						<include refid="ing"/>
						<include refid="isConfirm"/>
						<include refid="category" />
						<include refid="search" />
						<include refid="sort" />
					)aa
				) <![CDATA[where rnum >=#{startRow} and rnum <=#{endRow}]]>
			</otherwise>
		</choose>
	</select>
	
	<!-- 메인 요약 -->
		<!-- 종료임바크 -->
		<select id="mainEnd" resultType="funding">
			select * from(
				select f.*, rownum rnum from funding f
				<include refid="ing"/>
				<include refid="isConfirm"/>
				and ceil(edate-(sysdate + (1/24)*9)) = (  select ceil(min(edate-(sysdate + (1/24)*9))) from funding
				<include refid="ing"/>
				<include refid="isConfirm"/>)
			)where rnum = 1
		</select>
		
		<!-- 새로 시작하는 -->
		<select id="mainNew" resultType="funding">
			select * from(
				select aa.*, rownum rnum from (
					select fNum, title, content, amount, camout, sdate, edate, category, confirm, aid, addr, regdate, id, hit, (sysdate + (1/24)*9) - sdate s from funding
					where sdate > (sysdate + (1/24)*9) and edate > (sysdate + (1/24)*9) and confirm = 'y' order by s desc
				)aa
			) where rnum = 1
		</select>
		
		<!-- 핫 -->
		<select id="mainHot" resultType="funding">
			select * from (
				select aa.*, rownum rnum from (
					select * from funding
					<include refid="ing"/>
        			order by fNum desc
   				 )aa
			where hit = (select max(hit) from funding
				<include refid="ing"/>
				)
			) where rnum = 1
			<include refid="isConfirm"/>
		</select>
		
		<!-- 액수 -->
		<select id="mainPrice" resultType="funding">
			select * from (
				select aa.*, rownum rnum from (
					select * from funding
					<include refid="ing"/>
        			order by fNum desc
   				 )aa
			where camout = (select max(camout) from funding
				<include refid="ing"/>
				)
			) where rnum = 1
			<include refid="isConfirm"/>
		</select>
	
	<!-- ///////// -->
	
	<!-- 전체 펀딩 금액, 갯수-->
	<select id="totFunding" resultType="hashmap">
		select NVL(count(fNum), 0) cnt, NVL(sum(camout), 0) s from funding where confirm = 'y'
	</select>
	<!-- 오늘 펀딩 금액, 갯수 -->
	<select id="todayFundingPrice" resultType="int">
		select NVL(sum(f.amount * price), 0) sumPrice from fdetail f, reward r
            where  f.regdate = (sysdate + (1/24)*9)
            and f.rNum = r.rnum
		order by f.regdate desc
	</select>
	<select id="todayFundingCount" resultType="int">
		select NVL(count(fNum),0) from funding
		<include refid="ing"/>
		<include refid="isConfirm"/>
	</select>
	
	<!-- 연관검색어 추출 -->
	<select id="related" parameterType="hashmap" resultType="string">
		select title from(
		select aa.*, rownum rnum from(
			select ${field} from funding  
			<!-- 연관검색어는 제목만 검색되도록 설정
				<if test="field == 'title'">title</if>
				<if test="field == 'content'">content</if>
				<if test="field == 'id'">id</if>
			-->
			where title like '%' || #{keyword} || '%' order by title
			)aa
		)
		<![CDATA[where rnum<6]]>	
	</select>
</mapper>